<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JUnit Jupiter" tests="99" skipped="0" failures="0" errors="0" time="1.09" hostname="pierpaolo-XPS-15-9550" timestamp="2020-05-26T16:35:14">
<properties>
<property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
<property name="file.encoding" value="UTF-8"/>
<property name="file.separator" value="/"/>
<property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
<property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
<property name="java.class.path" value="/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/classes/java/test:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/resources/test:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/classes/java/main:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/resources/main:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.apis/google-api-services-drive/v3-rev154-1.25.0/b840aeb45c31b97e28f365667f93bbd86fd8790d/google-api-services-drive-v3-rev154-1.25.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.api-client/google-api-client/1.25.0/e7ff725e89ff5dcbed107be1a24e8102ae2441ee/google-api-client-1.25.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.oauth-client/google-oauth-client-jetty/1.23.0/e0deaf34371e9ca09f9a04bcbaa854243283cae4/google-oauth-client-jetty-1.23.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/21.0/3a3d111be1be1b745edfa7d91678a12d7ed38709/guava-21.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.vintage/junit-vintage-engine/5.6.0/a8e5f7ae69043582a5ab05bdaa62ba4406f403f0/junit-vintage-engine-5.6.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.6.0/a3a6ec96c010875444b3ca31828108093758ec00/junit-platform-engine-1.6.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.6.0/b0a75795cf03841d4f9cc54099557baffc11c727/junit-platform-commons-1.6.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.6.0/83c9e737f6015d9e00029b9b1d51e952a884b8f9/junit-jupiter-engine-5.6.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.6.0/f29e6318333d2303ce4965c9819cfad08de7d1e5/junit-jupiter-api-5.6.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/junit/junit/4.13/e49ccba652b735c93bd6e6f59760d8254cf597dd/junit-4.13.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.oauth-client/google-oauth-client-java6/1.23.0/7acbddf56c4ad04efc9d3b48fe015e6250241bf0/google-oauth-client-java6-1.23.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.oauth-client/google-oauth-client/1.25.0/c9ee14e8b095b4b301b28d57755cc482b8d6f39f/google-oauth-client-1.25.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.http-client/google-http-client-jackson2/1.25.0/7c5c89bd4d0d34d9f1cb3396e8da6233e5074b5c/google-http-client-jackson2-1.25.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty/6.1.26/2f546e289fddd5b1fab1d4199fbb6e9ef43ee4b0/jetty-6.1.26.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/jetty-util/6.1.26/e5642fe0399814e1687d55a3862aa5a3417226a9/jetty-util-6.1.26.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.mortbay.jetty/servlet-api/2.5-20081211/22bff70037e1e6fa7e6413149489552ee2064702/servlet-api-2.5-20081211.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.http-client/google-http-client/1.25.0/5fb16523c393bfe0210c29db44742bd308311841/google-http-client-1.25.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.9.6/4e393793c37c77e042ccc7be5a914ae39251b365/jackson-core-2.9.6.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.5/1603dfd56ebcd583ccdf337b6c3984ac55d89e58/httpclient-4.5.5.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/com.google.j2objc/j2objc-annotations/1.1/ed28ded51a8b1c6b112568def5f4b455e6809019/j2objc-annotations-1.1.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.9/a86ce739e5a7175b4b234c290a00a5fdb80957a0/httpcore-4.4.9.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/4bfc12adfe4842bf07b657f0369c4cb522955686/commons-logging-1.2.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-console/1.1.0/1ea376db54ab4ec0018c5e99d414e1c7c034387/junit-platform-console-1.1.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-launcher/1.1.0/ba098edde4e59cacd9225e238ea3ad9c946684ab/junit-platform-launcher-1.1.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.1.0/2596bd4d909e7ea8d029272db4338075445d731b/junit-platform-engine-1.1.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.1.0/d6aa21029f9cedfb4cc8a9e9efc0bd97987205b8/junit-platform-commons-1.1.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.0.0/3ef5276905e36f4d8055fe3cb0bdcc7503ffc85d/apiguardian-api-1.0.0.jar:/home/pierpaolo/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.0.0/6f09c598e9ff64bf0ce2fa7e7de49a99ba83c0b4/opentest4j-1.0.0.jar"/>
<property name="java.class.version" value="55.0"/>
<property name="java.home" value="/usr/lib/jvm/java-11-openjdk-amd64"/>
<property name="java.io.tmpdir" value="/tmp"/>
<property name="java.library.path" value="/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
<property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
<property name="java.runtime.version" value="11.0.7+10-post-Ubuntu-3ubuntu1"/>
<property name="java.specification.name" value="Java Platform API Specification"/>
<property name="java.specification.vendor" value="Oracle Corporation"/>
<property name="java.specification.version" value="11"/>
<property name="java.vendor" value="Ubuntu"/>
<property name="java.vendor.url" value="https://ubuntu.com/"/>
<property name="java.vendor.url.bug" value="https://bugs.launchpad.net/ubuntu/+source/openjdk-lts"/>
<property name="java.version" value="11.0.7"/>
<property name="java.version.date" value="2020-04-14"/>
<property name="java.vm.compressedOopsMode" value="32-bit"/>
<property name="java.vm.info" value="mixed mode, sharing"/>
<property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
<property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
<property name="java.vm.specification.vendor" value="Oracle Corporation"/>
<property name="java.vm.specification.version" value="11"/>
<property name="java.vm.vendor" value="Ubuntu"/>
<property name="java.vm.version" value="11.0.7+10-post-Ubuntu-3ubuntu1"/>
<property name="jdk.debug" value="release"/>
<property name="line.separator" value="
"/>
<property name="os.arch" value="amd64"/>
<property name="os.name" value="Linux"/>
<property name="os.version" value="5.4.0-31-generic"/>
<property name="path.separator" value=":"/>
<property name="sun.arch.data.model" value="64"/>
<property name="sun.boot.library.path" value="/usr/lib/jvm/java-11-openjdk-amd64/lib"/>
<property name="sun.cpu.endian" value="little"/>
<property name="sun.cpu.isalist" value=""/>
<property name="sun.desktop" value="gnome"/>
<property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
<property name="sun.java.command" value="org.junit.platform.console.ConsoleLauncher --details NONE --scan-class-path /home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/classes/java/main:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/resources/main:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/classes/java/test:/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/resources/test -n ^.*Tests?$ -e junit-jupiter --reports-dir /home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson/build/test-results/junit-platform"/>
<property name="sun.java.launcher" value="SUN_STANDARD"/>
<property name="sun.jnu.encoding" value="UTF-8"/>
<property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
<property name="sun.os.patch.level" value="unknown"/>
<property name="user.country" value="US"/>
<property name="user.dir" value="/home/pierpaolo/Documents/GitHub/IDS1920/progetto-wilkinson/progetto1920-wilkinson"/>
<property name="user.home" value="/home/pierpaolo"/>
<property name="user.language" value="en"/>
<property name="user.name" value="pierpaolo"/>
<property name="user.timezone" value="Europe/Prague"/>
<property name="user.variant" value=""/>
</properties>
<testcase name="testQueenLegalMoves()" classname="it.uniba.test.BoardTest" time="0.095">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testQueenLegalMoves()]
display-name: testQueenLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnEndBoardLegalMoves()" classname="it.uniba.test.BoardTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnEndBoardLegalMoves()]
display-name: testWhitePawnEndBoardLegalMoves()
]]></system-out>
</testcase>
<testcase name="testRookReducedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.013">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testRookReducedLegalMoves()]
display-name: testRookReducedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBishopReducedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.01">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBishopReducedLegalMoves()]
display-name: testBishopReducedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnLegalMoves()" classname="it.uniba.test.BoardTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnLegalMoves()]
display-name: testBlackPawnLegalMoves()
]]></system-out>
</testcase>
<testcase name="testKingLegalMoves()" classname="it.uniba.test.BoardTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testKingLegalMoves()]
display-name: testKingLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnAlreadyMovedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnAlreadyMovedLegalMoves()]
display-name: testWhitePawnAlreadyMovedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnFrontPieceLegalMoves()" classname="it.uniba.test.BoardTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnFrontPieceLegalMoves()]
display-name: testWhitePawnFrontPieceLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnEndBoardLegalMoves()" classname="it.uniba.test.BoardTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnEndBoardLegalMoves()]
display-name: testBlackPawnEndBoardLegalMoves()
]]></system-out>
</testcase>
<testcase name="testRookLegalMoves()" classname="it.uniba.test.BoardTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testRookLegalMoves()]
display-name: testRookLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnEnPassantLegalMoves()" classname="it.uniba.test.BoardTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnEnPassantLegalMoves()]
display-name: testWhitePawnEnPassantLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnLegalMoves()" classname="it.uniba.test.BoardTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnLegalMoves()]
display-name: testWhitePawnLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnCaptureLegalMoves()" classname="it.uniba.test.BoardTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnCaptureLegalMoves()]
display-name: testWhitePawnCaptureLegalMoves()
]]></system-out>
</testcase>
<testcase name="testKingReducedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.013">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testKingReducedLegalMoves()]
display-name: testKingReducedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testKnightReducedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.012">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testKnightReducedLegalMoves()]
display-name: testKnightReducedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnEnPassantLegalMoves()" classname="it.uniba.test.BoardTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnEnPassantLegalMoves()]
display-name: testBlackPawnEnPassantLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnAlreadyMovedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnAlreadyMovedLegalMoves()]
display-name: testBlackPawnAlreadyMovedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnCaptureLegalMoves()" classname="it.uniba.test.BoardTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnCaptureLegalMoves()]
display-name: testBlackPawnCaptureLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhitePawnEnPassantNotPossibleLegalMoves()" classname="it.uniba.test.BoardTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testWhitePawnEnPassantNotPossibleLegalMoves()]
display-name: testWhitePawnEnPassantNotPossibleLegalMoves()
]]></system-out>
</testcase>
<testcase name="testKingRefinedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.056">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testKingRefinedLegalMoves()]
display-name: testKingRefinedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testQueenReducedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.016">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testQueenReducedLegalMoves()]
display-name: testQueenReducedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnEnPassantNotPossibleLegalMoves()" classname="it.uniba.test.BoardTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnEnPassantNotPossibleLegalMoves()]
display-name: testBlackPawnEnPassantNotPossibleLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBlackPawnFrontPieceLegalMoves()" classname="it.uniba.test.BoardTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBlackPawnFrontPieceLegalMoves()]
display-name: testBlackPawnFrontPieceLegalMoves()
]]></system-out>
</testcase>
<testcase name="testBishopLegalMoves()" classname="it.uniba.test.BoardTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testBishopLegalMoves()]
display-name: testBishopLegalMoves()
]]></system-out>
</testcase>
<testcase name="testGenericPieceRefinedLegalMoves()" classname="it.uniba.test.BoardTest" time="0.02">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testGenericPieceRefinedLegalMoves()]
display-name: testGenericPieceRefinedLegalMoves()
]]></system-out>
</testcase>
<testcase name="testKnightLegalMoves()" classname="it.uniba.test.BoardTest" time="0.013">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.BoardTest]/[method:testKnightLegalMoves()]
display-name: testKnightLegalMoves()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationPawnCapture()" classname="it.uniba.test.AlgebraicNotationTest" time="0.013">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationPawnCapture()]
display-name: testAlgebraicNotationPawnCapture()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationRowAmbiguity()" classname="it.uniba.test.AlgebraicNotationTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationRowAmbiguity()]
display-name: testAlgebraicNotationRowAmbiguity()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationColAmbiguity()" classname="it.uniba.test.AlgebraicNotationTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationColAmbiguity()]
display-name: testAlgebraicNotationColAmbiguity()
]]></system-out>
</testcase>
<testcase name="testInvalidAlgebraicNotation()" classname="it.uniba.test.AlgebraicNotationTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testInvalidAlgebraicNotation()]
display-name: testInvalidAlgebraicNotation()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationCheck()" classname="it.uniba.test.AlgebraicNotationTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationCheck()]
display-name: testAlgebraicNotationCheck()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationPawnEnPassant()" classname="it.uniba.test.AlgebraicNotationTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationPawnEnPassant()]
display-name: testAlgebraicNotationPawnEnPassant()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationCastle()" classname="it.uniba.test.AlgebraicNotationTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationCastle()]
display-name: testAlgebraicNotationCastle()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationCapture()" classname="it.uniba.test.AlgebraicNotationTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationCapture()]
display-name: testAlgebraicNotationCapture()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationPawn()" classname="it.uniba.test.AlgebraicNotationTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationPawn()]
display-name: testAlgebraicNotationPawn()
]]></system-out>
</testcase>
<testcase name="testAlgebraicNotationDoubleCheck()" classname="it.uniba.test.AlgebraicNotationTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.AlgebraicNotationTest]/[method:testAlgebraicNotationDoubleCheck()]
display-name: testAlgebraicNotationDoubleCheck()
]]></system-out>
</testcase>
<testcase name="testWhiteNotEnPassantCapture()" classname="it.uniba.test.GameTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteNotEnPassantCapture()]
display-name: testWhiteNotEnPassantCapture()
]]></system-out>
</testcase>
<testcase name="testBlackKingCaptured()" classname="it.uniba.test.GameTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackKingCaptured()]
display-name: testBlackKingCaptured()
]]></system-out>
</testcase>
<testcase name="testSameRowAmbiguityCapture()" classname="it.uniba.test.GameTest" time="0.037">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testSameRowAmbiguityCapture()]
display-name: testSameRowAmbiguityCapture()
]]></system-out>
</testcase>
<testcase name="testWhitePin()" classname="it.uniba.test.GameTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhitePin()]
display-name: testWhitePin()
]]></system-out>
</testcase>
<testcase name="testBlackEnPassantBoolean()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackEnPassantBoolean()]
display-name: testBlackEnPassantBoolean()
]]></system-out>
</testcase>
<testcase name="testBlackKingNoLegalMoves()" classname="it.uniba.test.GameTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackKingNoLegalMoves()]
display-name: testBlackKingNoLegalMoves()
]]></system-out>
</testcase>
<testcase name="testWhiteEnPassantBoolean()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteEnPassantBoolean()]
display-name: testWhiteEnPassantBoolean()
]]></system-out>
</testcase>
<testcase name="testWhiteKingNoLegalMoves()" classname="it.uniba.test.GameTest" time="0.018">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteKingNoLegalMoves()]
display-name: testWhiteKingNoLegalMoves()
]]></system-out>
</testcase>
<testcase name="testCaptureWithNoXcommand()" classname="it.uniba.test.GameTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testCaptureWithNoXcommand()]
display-name: testCaptureWithNoXcommand()
]]></system-out>
</testcase>
<testcase name="testBlackEnPassantCapture()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackEnPassantCapture()]
display-name: testBlackEnPassantCapture()
]]></system-out>
</testcase>
<testcase name="testWhiteEnPassantCapture()" classname="it.uniba.test.GameTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteEnPassantCapture()]
display-name: testWhiteEnPassantCapture()
]]></system-out>
</testcase>
<testcase name="testEnPassantBooleanReset()" classname="it.uniba.test.GameTest" time="0.007">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testEnPassantBooleanReset()]
display-name: testEnPassantBooleanReset()
]]></system-out>
</testcase>
<testcase name="testWhiteKingCaptured()" classname="it.uniba.test.GameTest" time="0.039">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteKingCaptured()]
display-name: testWhiteKingCaptured()
]]></system-out>
</testcase>
<testcase name="testBlackPin()" classname="it.uniba.test.GameTest" time="0.017">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackPin()]
display-name: testBlackPin()
]]></system-out>
</testcase>
<testcase name="testSameRowAmbiguityMove()" classname="it.uniba.test.GameTest" time="0.025">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testSameRowAmbiguityMove()]
display-name: testSameRowAmbiguityMove()
]]></system-out>
</testcase>
<testcase name="testBlackKingLongCastle()" classname="it.uniba.test.GameTest" time="0.011">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackKingLongCastle()]
display-name: testBlackKingLongCastle()
]]></system-out>
</testcase>
<testcase name="testMovementWithXcommand()" classname="it.uniba.test.GameTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testMovementWithXcommand()]
display-name: testMovementWithXcommand()
]]></system-out>
</testcase>
<testcase name="testBlackKingShortCastle()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackKingShortCastle()]
display-name: testBlackKingShortCastle()
]]></system-out>
</testcase>
<testcase name="testWhiteKingShortCastle()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteKingShortCastle()]
display-name: testWhiteKingShortCastle()
]]></system-out>
</testcase>
<testcase name="testSameColAmbiguityMove()" classname="it.uniba.test.GameTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testSameColAmbiguityMove()]
display-name: testSameColAmbiguityMove()
]]></system-out>
</testcase>
<testcase name="testSameColAmbiguityCapture()" classname="it.uniba.test.GameTest" time="0.009">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testSameColAmbiguityCapture()]
display-name: testSameColAmbiguityCapture()
]]></system-out>
</testcase>
<testcase name="testWhiteOneSpotEnPassantBoolean()" classname="it.uniba.test.GameTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteOneSpotEnPassantBoolean()]
display-name: testWhiteOneSpotEnPassantBoolean()
]]></system-out>
</testcase>
<testcase name="testWhiteKingLongCastle()" classname="it.uniba.test.GameTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testWhiteKingLongCastle()]
display-name: testWhiteKingLongCastle()
]]></system-out>
</testcase>
<testcase name="testBlackOneSpotEnPassantBoolean()" classname="it.uniba.test.GameTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackOneSpotEnPassantBoolean()]
display-name: testBlackOneSpotEnPassantBoolean()
]]></system-out>
</testcase>
<testcase name="testBlackNotEnPassantCapture()" classname="it.uniba.test.GameTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.GameTest]/[method:testBlackNotEnPassantCapture()]
display-name: testBlackNotEnPassantCapture()
]]></system-out>
</testcase>
<testcase name="testCastleRookEndUnderAttack()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleRookEndUnderAttack()]
display-name: testCastleRookEndUnderAttack()
]]></system-out>
</testcase>
<testcase name="testCastleKingMoved()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleKingMoved()]
display-name: testCastleKingMoved()
]]></system-out>
</testcase>
<testcase name="testCastleLongBlack()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleLongBlack()]
display-name: testCastleLongBlack()
]]></system-out>
</testcase>
<testcase name="testCommandNotValidPiece()" classname="it.uniba.test.MoveTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandNotValidPiece()]
display-name: testCommandNotValidPiece()
]]></system-out>
</testcase>
<testcase name="testNumberAmbiguity()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testNumberAmbiguity()]
display-name: testNumberAmbiguity()
]]></system-out>
</testcase>
<testcase name="testCastleRookUnderAttack()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleRookUnderAttack()]
display-name: testCastleRookUnderAttack()
]]></system-out>
</testcase>
<testcase name="testCommandNotValidSpot()" classname="it.uniba.test.MoveTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandNotValidSpot()]
display-name: testCommandNotValidSpot()
]]></system-out>
</testcase>
<testcase name="testCastleFriendPieceBetween()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleFriendPieceBetween()]
display-name: testCastleFriendPieceBetween()
]]></system-out>
</testcase>
<testcase name="testIncorrectCastleCmd()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testIncorrectCastleCmd()]
display-name: testIncorrectCastleCmd()
]]></system-out>
</testcase>
<testcase name="testAmbiguityCapture()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testAmbiguityCapture()]
display-name: testAmbiguityCapture()
]]></system-out>
</testcase>
<testcase name="testLetterAmbiguity()" classname="it.uniba.test.MoveTest" time="0.008">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testLetterAmbiguity()]
display-name: testLetterAmbiguity()
]]></system-out>
</testcase>
<testcase name="testCastleKingEndUnderAttack()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleKingEndUnderAttack()]
display-name: testCastleKingEndUnderAttack()
]]></system-out>
</testcase>
<testcase name="testNotSetAmbiguityCapture()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testNotSetAmbiguityCapture()]
display-name: testNotSetAmbiguityCapture()
]]></system-out>
</testcase>
<testcase name="testCommandPawnBlackEP()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandPawnBlackEP()]
display-name: testCommandPawnBlackEP()
]]></system-out>
</testcase>
<testcase name="testCastleKingUnderAttack()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleKingUnderAttack()]
display-name: testCastleKingUnderAttack()
]]></system-out>
</testcase>
<testcase name="testCommandPawnBlack()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandPawnBlack()]
display-name: testCommandPawnBlack()
]]></system-out>
</testcase>
<testcase name="testCommandPawnWhite()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandPawnWhite()]
display-name: testCommandPawnWhite()
]]></system-out>
</testcase>
<testcase name="testWhiteCastleLong()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testWhiteCastleLong()]
display-name: testWhiteCastleLong()
]]></system-out>
</testcase>
<testcase name="testCommandBishopBlack()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandBishopBlack()]
display-name: testCommandBishopBlack()
]]></system-out>
</testcase>
<testcase name="testCommandBishopWhite()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandBishopWhite()]
display-name: testCommandBishopWhite()
]]></system-out>
</testcase>
<testcase name="testWhiteCastleShort()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testWhiteCastleShort()]
display-name: testWhiteCastleShort()
]]></system-out>
</testcase>
<testcase name="testCastleIncorrectPiece()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleIncorrectPiece()]
display-name: testCastleIncorrectPiece()
]]></system-out>
</testcase>
<testcase name="testCommandNotValidEnd()" classname="it.uniba.test.MoveTest" time="0.001">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandNotValidEnd()]
display-name: testCommandNotValidEnd()
]]></system-out>
</testcase>
<testcase name="testCastleEnemyPieceBetween()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleEnemyPieceBetween()]
display-name: testCastleEnemyPieceBetween()
]]></system-out>
</testcase>
<testcase name="testCommandRookBlack()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandRookBlack()]
display-name: testCommandRookBlack()
]]></system-out>
</testcase>
<testcase name="testCommandRookWhite()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandRookWhite()]
display-name: testCommandRookWhite()
]]></system-out>
</testcase>
<testcase name="testCastleLongSpotUnderAttack()" classname="it.uniba.test.MoveTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleLongSpotUnderAttack()]
display-name: testCastleLongSpotUnderAttack()
]]></system-out>
</testcase>
<testcase name="testBlackCastleShort()" classname="it.uniba.test.MoveTest" time="0.006">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testBlackCastleShort()]
display-name: testBlackCastleShort()
]]></system-out>
</testcase>
<testcase name="testCommandNotValidCapture()" classname="it.uniba.test.MoveTest" time="0.002">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandNotValidCapture()]
display-name: testCommandNotValidCapture()
]]></system-out>
</testcase>
<testcase name="testCommandPawnWhiteEP()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandPawnWhiteEP()]
display-name: testCommandPawnWhiteEP()
]]></system-out>
</testcase>
<testcase name="testCastleRookMoved()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCastleRookMoved()]
display-name: testCastleRookMoved()
]]></system-out>
</testcase>
<testcase name="testNotSetAmbiguity()" classname="it.uniba.test.MoveTest" time="0.004">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testNotSetAmbiguity()]
display-name: testNotSetAmbiguity()
]]></system-out>
</testcase>
<testcase name="testCommandQueenBlack()" classname="it.uniba.test.MoveTest" time="0.005">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandQueenBlack()]
display-name: testCommandQueenBlack()
]]></system-out>
</testcase>
<testcase name="testCommandQueenWhite()" classname="it.uniba.test.MoveTest" time="0.037">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandQueenWhite()]
display-name: testCommandQueenWhite()
]]></system-out>
</testcase>
<testcase name="testCommandKnightBlack()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandKnightBlack()]
display-name: testCommandKnightBlack()
]]></system-out>
</testcase>
<testcase name="testCommandKnightWhite()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandKnightWhite()]
display-name: testCommandKnightWhite()
]]></system-out>
</testcase>
<testcase name="testCommandKingBlack()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandKingBlack()]
display-name: testCommandKingBlack()
]]></system-out>
</testcase>
<testcase name="testCommandKingWhite()" classname="it.uniba.test.MoveTest" time="0.003">
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]/[class:it.uniba.test.MoveTest]/[method:testCommandKingWhite()]
display-name: testCommandKingWhite()
]]></system-out>
</testcase>
<system-out><![CDATA[
unique-id: [engine:junit-jupiter]
display-name: JUnit Jupiter
]]></system-out>
</testsuite>
